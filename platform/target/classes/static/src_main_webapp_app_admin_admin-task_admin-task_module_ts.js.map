{"version":3,"file":"src_main_webapp_app_admin_admin-task_admin-task_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/admin/admin-task/admin-task.model.ts","./src/main/webapp/app/admin/admin-task/admin-task.module.ts","./src/main/webapp/app/admin/admin-task/admin-task.route.ts","./src/main/webapp/app/admin/admin-task/delete/admin-task-delete-dialog.component.ts","./src/main/webapp/app/admin/admin-task/delete/admin-task-delete-dialog.component.html","./src/main/webapp/app/admin/admin-task/list/admin-task.comonent.ts","./src/main/webapp/app/admin/admin-task/list/admin-task.component.html","./src/main/webapp/app/admin/admin-task/update/admin-task-update.component.ts","./src/main/webapp/app/admin/admin-task/update/admin-task-update.component.html"],"sourcesContent":["\nexport interface IAdminTask {\n  id?: number;\n  name?: string;\n  instruction_excel?: number;\n  instruction_pdf?: number;\n  solution_excel?: number;\n}\n\nexport class AdminTask implements IAdminTask {\n  constructor(\n    public id?: number,\n    public name?: string,\n    public instruction_excel?: number,\n    public instruction_pdf?: number,\n    public solution_excel?: number\n  ) {\n  }\n}\n","import {NgModule} from \"@angular/core\";\nimport {SharedModule} from \"../../shared/shared.module\";\nimport {RouterModule} from \"@angular/router\";\nimport {adminTaskRoute} from \"./admin-task.route\";\nimport {AdminTaskComponent} from \"./list/admin-task.comonent\";\nimport {AdminTaskUpdateComponent} from \"./update/admin-task-update.component\";\nimport {AdminTaskDeleteDialogComponent} from \"./delete/admin-task-delete-dialog.component\";\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(adminTaskRoute), NgbModule],\n  declarations: [\n    AdminTaskComponent,\n    AdminTaskUpdateComponent,\n    AdminTaskDeleteDialogComponent,\n  ],\n  entryComponents: [AdminTaskDeleteDialogComponent],\n\n  exports: [\n    AdminTaskComponent\n  ]\n})\nexport class AdminTaskModule {}\n","import {Injectable} from \"@angular/core\";\nimport {ActivatedRouteSnapshot, Resolve, Routes} from \"@angular/router\";\nimport {AdminTask, IAdminTask} from \"./admin-task.model\";\nimport {AdminTaskService} from \"./service/admin-task.service\";\nimport {Observable, of} from \"rxjs\";\nimport {AdminTaskComponent} from \"./list/admin-task.comonent\";\nimport {AdminTaskUpdateComponent} from \"./update/admin-task-update.component\";\n\n@Injectable({ providedIn: 'root'})\nexport class AdminTaskResolve implements Resolve<IAdminTask> {\n  constructor(private service: AdminTaskService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<IAdminTask> {\n    const id = route.params['id'];\n    if (id) {\n      return this.service.find(id);\n    }\n    return of(new AdminTask());\n  }\n}\n\nexport const adminTaskRoute: Routes = [\n  {\n    path: '',\n    component: AdminTaskComponent,\n    data: {\n      defaultSort: 'id,asc',\n    },\n  },\n  {\n    path: 'new',\n    component: AdminTaskUpdateComponent,\n    resolve: {\n      adminTask: AdminTaskResolve,\n    },\n  },\n  {\n    path: 'login/edit',\n    component: AdminTaskUpdateComponent,\n    resolve: {\n      adminTask: AdminTaskResolve,\n    },\n  },\n];\n","import {Component} from \"@angular/core\";\nimport {AdminTask} from \"../admin-task.model\";\nimport {AdminTaskService} from \"../service/admin-task.service\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'jhi-admin-task-delete-dialog',\n  templateUrl: './admin-task-delete-dialog.component.html',\n})\nexport class AdminTaskDeleteDialogComponent {\n  adminTask?: AdminTask;\n\n  constructor(private adminTaskService: AdminTaskService, private activeModal: NgbActiveModal) {}\n\n  cancel(): void {\n    this.activeModal.dismiss();\n  }\n\n  confirmDelete(id: number): void {\n    this.adminTaskService.delete(id).subscribe( () => {\n      this.activeModal.close('deleted');\n    });\n  }\n}\n","<form *ngIf=\"adminTask\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(adminTask.id!)\">\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title\">Löschung bestätigen</h4>\n\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\n  </div>\n\n  <div class=\"modal-body\">\n    <jhi-alert-error></jhi-alert-error>\n\n    <p>\n      Wollen Sie diesen Admin-Task löschen?\n    </p>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Abbrechen</span>\n    </button>\n\n    <button type=\"submit\" class=\"btn btn-danger\">\n      <fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Löschen</span>\n    </button>\n  </div>\n</form>\n","import {Component, OnInit} from \"@angular/core\";\nimport {Account} from \"../../../core/auth/account.model\";\nimport {AdminTask} from \"../admin-task.model\";\nimport {ASC, DESC, ITEMS_PER_PAGE, SORT} from \"../../../config/pagination.constants\";\nimport {AdminTaskService} from \"../service/admin-task.service\";\nimport {AccountService} from \"../../../core/auth/account.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {AdminTaskDeleteDialogComponent} from \"../delete/admin-task-delete-dialog.component\";\nimport {HttpHeaders, HttpResponse} from \"@angular/common/http\";\nimport {combineLatest} from \"rxjs\";\n\n@Component({\n  selector: 'jhi-admin-task',\n  templateUrl: './admin-task.component.html',\n})\nexport class AdminTaskComponent implements OnInit {\n  currentAccount: Account | null = null;\n  adminTasks: AdminTask[] | null = null;\n  isLoading = false;\n  totalItems = 0;\n  itemsPerPage = ITEMS_PER_PAGE;\n  page!: number;\n  predicate!: string;\n  ascending!: boolean;\n\n  constructor(\n    private adminTaskService: AdminTaskService,\n    private accountService: AccountService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnInit(): void {\n    this.accountService.identity().subscribe(account => (this.currentAccount = account));\n    this.handleNavigation();\n  }\n\n  deleteAdminTask(adminTask: AdminTask): void {\n    const modalRef = this.modalService.open(AdminTaskDeleteDialogComponent, {size: 'lg', backdrop: 'static'} );\n    modalRef.componentInstance.adminTask = adminTask;\n    modalRef.closed.subscribe(reason => {\n      if (reason === 'deleted') {\n        this.loadAll();\n      }\n    });\n  }\n\n  loadAll(): void {\n    this.isLoading = true;\n    this.adminTaskService\n      .query( {\n        page: this.page -1,\n        size: this.itemsPerPage,\n        sort: this.sort(),\n      })\n      .subscribe({\n        next: (res: HttpResponse<AdminTask[]>) => {\n          this.isLoading = false;\n          this.onSuccess(res.body, res.headers)\n        },\n        error: () => (this.isLoading = false),\n      });\n  }\n\n  transition(): void {\n    this.router.navigate(['./'], {\n      relativeTo: this.activatedRoute.parent,\n      queryParams: {\n        page: this.page,\n        sort: `${this.predicate},${this.ascending ? ASC : DESC}`,\n      },\n    });\n  }\n\n\n\n\n  private handleNavigation(): void {\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe( ([data,params]) => {\n      const page = params.get('page');\n      this.page = +(page ?? 1);\n      const sort = (params.get(SORT) ?? data['defaultSort']).split(',');\n      this.predicate = sort[0];\n      this.ascending = sort[1] === ASC;\n      this.loadAll();\n    });\n\n  }\n\n  private sort(): string[] {\n    const result = [`${this.predicate},${this.ascending ? ASC : DESC}`];\n    if (this.predicate !== 'id') {\n      result.push('id');\n    }\n    return result;\n  }\n\n  private onSuccess(adminTasks: AdminTask[] | null, headers: HttpHeaders): void {\n    this.totalItems = Number(headers.get('X-Total-Count'));\n    this.adminTasks = adminTasks;\n  }\n}\n","<div>\n  <h2>\n    <span id=\"admin-task-page-heading\" data-cy=\"adminTaskPageHeading\">Admin Beispiele</span>\n\n    <div class=\"d-flex justify-content-end\">\n      <button class=\"btn btn-info mr-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\n        <span>Refresh List</span>\n      </button>\n      <button class=\"btn btn-primary jh-create-entity\" [routerLink]=\"['./new']\">\n        <fa-icon icon=\"plus\"></fa-icon> <span>neues Beispiel erstellen</span>\n      </button>\n    </div>\n  </h2>\n\n  <jhi-alert-error></jhi-alert-error>\n\n  <jhi-alert></jhi-alert>\n\n  <div class=\"table-responsive\" *ngIf=\"adminTasks\">\n    <table class=\"table table-striped\" aria-describedby=\"admin-task-page-heading\">\n      <thead>\n      <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition()\">\n        <th scope=\"col\" jhiSortBy=\"id\"><span>ID</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th><span>Beispiel Name</span></th>\n        <th><span>Angabe Excel</span></th>\n        <th><span>Angabe PDF</span></th>\n        <th><span>Lösung Excel</span></th>\n        <th scope=\"col\"></th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"adminTasks\">\n      <tr *ngFor=\"let adminTask of adminTasks;\">\n        <td>{{ adminTask.id }}</td>\n        <td>{{ adminTask.name }}</td>\n<!--        <td *ngIf=\"adminTask.pop() !== undefined\">-->\n<!--            <jhi-file-download [fileId]=\"adminTask.instruction_excel\"> </jhi-file-download>-->\n<!--        </td>-->\n        <td  *ngIf=\"adminTask.instruction_excel != undefined\">\n          <jhi-file-download [fileId]=\"adminTask.instruction_excel\"> </jhi-file-download>\n        </td>\n\n        <td *ngIf=\"adminTask.instruction_pdf != undefined\">\n          <jhi-file-download [fileId]=\"adminTask.instruction_pdf\"> </jhi-file-download>\n        </td>\n\n        <td *ngIf=\"adminTask.solution_excel != undefined\">\n          <jhi-file-download [fileId]=\"adminTask.solution_excel\"> </jhi-file-download>\n        </td>\n        <td class=\"text-right\">\n          <div class=\"btn-group\">\n            <button\n              type=\"button\"\n              (click)=\"deleteAdminTask(adminTask)\"\n              class=\"btn btn-danger btn-sm\"\n            >\n              <fa-icon icon=\"times\"></fa-icon>\n              <span class=\"d-none d-md-inline\">Löschen</span>\n            </button>\n          </div>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div *ngIf=\"adminTasks\">\n    <div class=\"row justify-content-center\">\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\n    </div>\n\n    <div class=\"row justify-content-center\">\n      <ngb-pagination\n        [collectionSize]=\"totalItems\"\n        [(page)]=\"page\"\n        [pageSize]=\"itemsPerPage\"\n        [maxSize]=\"5\"\n        [rotate]=\"true\"\n        [boundaryLinks]=\"true\"\n        (pageChange)=\"transition()\"\n      ></ngb-pagination>\n    </div>\n  </div>\n</div>\n","import {Component, OnInit} from \"@angular/core\";\nimport {AdminTask} from \"../admin-task.model\";\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {AdminTaskService} from \"../service/admin-task.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'jhi-admin-task-update',\n  templateUrl: './admin-task-update.component.html',\n})\nexport class AdminTaskUpdateComponent implements OnInit {\n  public adminTask!: AdminTask;\n  public isSaving = false;\n  public files: File[] | null = null;\n  // public uploadFileId = -1;\n  public uploadFileIdInstructionExcel = -1;\n  public uploadFileIdInstructionPdf = -1;\n  public uploadFileIdSolutionExcel = -1;\n\n\n  public editForm = this.fb.group( {\n    id: [],\n    name: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(1),\n        Validators.maxLength(100)\n      ],\n    ],\n  });\n\n  constructor(\n    private adminTaskService: AdminTaskService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    // private activeModal: NgbActiveModal\n  ) {}\n\n  public ngOnInit(): void {\n    this.route.data.subscribe(({ adminTask}) => {\n      if (adminTask) {\n        this.adminTask = adminTask;\n        // this.updateForm(adminTask);\n      }\n    });\n  }\n\n  public previousState(): void {\n    window.history.back();\n  }\n\n  public save(): void {\n    this.isSaving = true;\n    this.updateAdminTask(this.adminTask);\n    this.adminTaskService.create(this.adminTask).subscribe( {\n      next: () => this.onSaveSuccess(),\n      error: () => this.onSaveError(),\n    });\n  }\n\n  public updateForm(adminTask: AdminTask): void {\n    this.editForm.patchValue({\n      id: adminTask.id,\n      name: adminTask.name,\n      // instruction_excel: adminTask.instruction_excel,\n      // instruction_pdf: adminTask.instruction_pdf,\n      // solution_excel: adminTask.solution_excel,\n    });\n  }\n\n\n  public updateAdminTask(adminTask: AdminTask): void {\n    adminTask.name = this.editForm.get(['name'])!.value;\n    adminTask.instruction_excel = this.uploadFileIdInstructionExcel;\n    adminTask.instruction_pdf = this.uploadFileIdInstructionPdf;\n    adminTask.solution_excel = this.uploadFileIdSolutionExcel;\n    // adminTask.instruction_pdf = this.editForm.get(['instruction_pdf'])!.value;\n    // adminTask.solution_excel = this.editForm.get(['solution_excel'])!.value;\n  }\n\n  public onSaveSuccess(): void {\n    this.isSaving = false;\n    this.previousState();\n  }\n\n  public onSaveError(): void {\n    this.isSaving = false;\n  }\n\n  // public handleFileAdded(fileId: number): void {\n  //   this.uploadFileId = fileId;\n  // }\n  //\n  //\n  // public handleFileRemoved(fileId: number): void {\n  //   this.uploadFileId = -1;\n  // }\n  //\n  //\n  //\n  // public handleFileMoved(oldFileId: number, newFileId: number): void {\n  //   this.uploadFileId = newFileId;\n  // }\n\n  public handleFileAddedInstructionExcel(fileId: number): void {\n    this.uploadFileIdInstructionExcel = fileId;\n  }\n\n\n  public handleFileRemovedInstructionExcel(fileId: number): void {\n    this.uploadFileIdInstructionExcel = -1;\n  }\n\n\n\n  public handleFileMovedInstructionExcel(oldFileId: number, newFileId: number): void {\n    this.uploadFileIdInstructionExcel = newFileId;\n  }\n\n  public handleFileAddedInstructionPdf(fileId: number): void {\n    this.uploadFileIdInstructionPdf = fileId;\n  }\n\n\n  public handleFileRemovedInstructionPdf(fileId: number): void {\n    this.uploadFileIdInstructionPdf = -1;\n  }\n\n\n\n  public handleFileMovedInstructionPdf(oldFileId: number, newFileId: number): void {\n    this.uploadFileIdInstructionPdf = newFileId;\n  }\n\n  public handleFileAddedSolutionExcel(fileId: number): void {\n    this.uploadFileIdSolutionExcel = fileId;\n  }\n\n\n  public handleFileRemovedSolutionExcel(fileId: number): void {\n    this.uploadFileIdSolutionExcel = -1;\n  }\n\n\n\n  public handleFileMovedSolutionExcel(oldFileId: number, newFileId: number): void {\n    this.uploadFileIdSolutionExcel = newFileId;\n  }\n\n\n\n\n\n\n\n\n\n\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-8\">\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n      <h2 id=\"myAdminTaskLabel\">Admin Task erstellen</h2>\n\n      <div *ngIf=\"adminTask\">\n        <jhi-alert-error></jhi-alert-error>\n\n        <div class=\"form-group\" [hidden]=\"!adminTask.id\">\n          <label>ID</label>\n          <input type=\"text\" class=\"form-control\" name=\"id\" formControlName=\"id\" readonly />\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\">Name</label>\n          <input type=\"text\" class=\"form-control\" name=\"name\" formControlName=\"name\" />\n\n          <div *ngIf=\"editForm.get('name')!.invalid && (editForm.get('name')!.dirty || editForm.get('name')!.touched)\">\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('name')?.errors?.required\">\n              Diese Feld ist notwendig!\n            </small>\n\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"editForm.get('name')?.errors?.maxlength\"\n            >\n              Dieses Feld darf nicht mehr als 100 Zeichen beinhalten!\n            </small>\n\n            <small\n              class=\"form-text text-danger\"\n              *ngIf=\"editForm.get('name')?.errors?.pattern\"\n            >\n              Dieses Feld darf maximal 100 Zeichen beinhalten!\n            </small>\n          </div>\n        </div>\n\n\n        <div class=\"form-group\">\n          <label class=\"form-control-label\" for=\"fileUploadInstructionExcel\">Upload Angabe Excel: </label>\n          <jhi-file-upload\n            [disabled]=\"false\"\n            id=\"fileUploadInstructionExcel\"\n            [fileId]=\"uploadFileIdInstructionExcel\"\n            (fileAdded)=\"handleFileAddedInstructionExcel($event)\"\n            (fileRemoved)=\"handleFileRemovedInstructionExcel($event)\"\n            (fileModified)=\"handleFileMovedInstructionExcel($event[0], $event[1])\"\n          >\n          </jhi-file-upload>\n          <label class=\"form-control-label\" for=\"fileUploadInstructionPdf\">Upload Angabe PDF: </label>\n          <jhi-file-upload\n            [disabled]=\"false\"\n            id=\"fileUploadInstructionPdf\"\n            [fileId]=\"uploadFileIdInstructionPdf\"\n            (fileAdded)=\"handleFileAddedInstructionPdf($event)\"\n            (fileRemoved)=\"handleFileRemovedInstructionPdf($event)\"\n            (fileModified)=\"handleFileMovedInstructionPdf($event[0], $event[1])\"\n          >\n          </jhi-file-upload>\n          <label class=\"form-control-label\" for=\"fileUploadSolutionExcel\">Upload Lösung Excel: </label>\n          <jhi-file-upload\n            [disabled]=\"false\"\n            id=\"fileUploadSolutionExcel\"\n            [fileId]=\"uploadFileIdSolutionExcel\"\n            (fileAdded)=\"handleFileAddedSolutionExcel($event)\"\n            (fileRemoved)=\"handleFileRemovedSolutionExcel($event)\"\n            (fileModified)=\"handleFileMovedSolutionExcel($event[0], $event[1])\"\n          >\n          </jhi-file-upload>\n        </div>\n\n        <small\n          class=\"form-text text-danger\"\n          *ngIf=\"uploadFileIdInstructionExcel == -1 || uploadFileIdInstructionPdf == -1 || uploadFileIdSolutionExcel == -1\"\n        >\n          Bitte Laden Sie alle 3 Files hoch\n        </small>\n\n\n      </div>\n\n      <div *ngIf=\"adminTask\">\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n        </button>\n\n        <button type=\"submit\" [disabled]=\"editForm.invalid || isSaving || uploadFileIdInstructionExcel == -1 || uploadFileIdInstructionPdf == -1 || uploadFileIdSolutionExcel == -1 \" class=\"btn btn-primary\">\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"],"names":[],"sourceRoot":"webpack:///"}