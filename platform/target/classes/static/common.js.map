{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;AAMuE;;;;AAGhE,MAAM,gBAAgB;IAK3B,YAAoB,IAAgB,EAAU,wBAAkD;QAA5E,SAAI,GAAJ,IAAI,CAAY;QAAU,6BAAwB,GAAxB,wBAAwB,CAA0B;QAJhG,uCAAuC;QAC/B,mBAAc,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,2BAA2B,CAAC,CAAC;QAC3F,gBAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,sBAAsB,CAAC,CAAC;IAEQ,CAAC;IAEpG,MAAM,CAAC,SAAqB;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAa,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACjE,CAAC;IAED,IAAI,CAAC,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,CAAC,CAAC;IAChE,CAAC;IAED,KAAK,CAAC,GAAgB;QACpB,MAAM,OAAO,GAAG,+EAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,IAAI,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAC,CAAC,CAAC;IACnG,CAAC;IAED,MAAM,CAAC,EAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE,CAAC,CAAC;IACvD,CAAC;;gFAtBU,gBAAgB;iHAAhB,gBAAgB,WAAhB,gBAAgB,mBADH,MAAM;;;;;;;;;;;;;;;;;;ACRzB,MAAM,cAAc,GAAG,EAAE,CAAC;AAC1B,MAAM,GAAG,GAAG,KAAK,CAAC;AAClB,MAAM,IAAI,GAAG,MAAM,CAAC;AACpB,MAAM,IAAI,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;;ACHuB;AAE3C,MAAM,mBAAmB,GAAG,CAAC,GAAS,EAAc,EAAE;IAC3D,IAAI,OAAO,GAAe,IAAI,4DAAU,EAAE,CAAC;IAE3C,IAAI,GAAG,EAAE;QACP,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAC7B,IAAI,GAAG,KAAK,MAAM,EAAE;gBAClB,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,GAAG,CAAC,IAAI,EAAE;YACZ,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;gBAC/B,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;SACJ;KACF;IAED,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC","sources":["./src/main/webapp/app/admin/admin-task/service/admin-task.service.ts","./src/main/webapp/app/config/pagination.constants.ts","./src/main/webapp/app/core/request/request-util.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {HttpClient, HttpResponse} from \"@angular/common/http\";\nimport {ApplicationConfigService} from \"../../../core/config/application-config.service\";\nimport {IAdminTask} from \"../admin-task.model\";\nimport {Observable} from \"rxjs\";\nimport {Pagination} from \"../../../core/request/request.model\";\nimport {createRequestOption} from \"../../../core/request/request-util\";\n\n@Injectable({ providedIn: 'root'})\nexport class AdminTaskService {\n  // extra resourceUrl for the DTO Object\n  private resourceUrlDTO = this.applicationConfigService.getEndpointFor('api/admin/admin_task_meta');\n  private resourceUrl = this.applicationConfigService.getEndpointFor('api/admin/admin_task');\n\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\n\n  create(adminTask: IAdminTask): Observable<IAdminTask> {\n    return this.http.post<IAdminTask>(this.resourceUrl, adminTask);\n  }\n\n  find(id: number): Observable<IAdminTask> {\n    return this.http.get<IAdminTask>(`${this.resourceUrl}/${id}`);\n  }\n\n  query(req?: Pagination): Observable<HttpResponse<IAdminTask[]>> {\n    const options = createRequestOption(req);\n    return this.http.get<IAdminTask[]>(this.resourceUrlDTO, { params: options, observe: 'response'});\n  }\n\n  delete(id: number): Observable<{}> {\n    return this.http.delete(`${this.resourceUrl}/${id}`);\n  }\n\n\n\n}\n","export const ITEMS_PER_PAGE = 20;\nexport const ASC = 'asc';\nexport const DESC = 'desc';\nexport const SORT = 'sort';\n","import { HttpParams } from '@angular/common/http';\n\nexport const createRequestOption = (req?: any): HttpParams => {\n  let options: HttpParams = new HttpParams();\n\n  if (req) {\n    Object.keys(req).forEach(key => {\n      if (key !== 'sort') {\n        options = options.set(key, req[key]);\n      }\n    });\n\n    if (req.sort) {\n      req.sort.forEach((val: string) => {\n        options = options.append('sort', val);\n      });\n    }\n  }\n\n  return options;\n};\n"],"names":[],"sourceRoot":"webpack:///"}