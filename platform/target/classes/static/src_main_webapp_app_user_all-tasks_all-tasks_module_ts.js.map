{"version":3,"file":"src_main_webapp_app_user_all-tasks_all-tasks_module_ts.js","mappings":"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","sources":["./src/main/webapp/app/user/all-tasks/all-tasks.component.ts","./src/main/webapp/app/user/all-tasks/all-tasks.component.html","./src/main/webapp/app/user/all-tasks/all-tasks.module.ts","./src/main/webapp/app/user/all-tasks/all-tasks.route.ts"],"sourcesContent":["import {Component, OnInit} from \"@angular/core\";\nimport {Account} from \"../../core/auth/account.model\";\nimport {AdminTask} from \"../../admin/admin-task/admin-task.model\";\nimport {ASC, DESC, ITEMS_PER_PAGE, SORT} from \"../../config/pagination.constants\";\nimport {AdminTaskService} from \"../../admin/admin-task/service/admin-task.service\";\nimport {AccountService} from \"../../core/auth/account.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {combineLatest} from \"rxjs\";\nimport {HttpHeaders, HttpResponse} from \"@angular/common/http\";\n\n\n@Component({\n  selector: 'jhi-all-tasks',\n  templateUrl: './all-tasks.component.html',\n})\nexport class AllTasksComponent implements OnInit {\n  currentAccount: Account | null = null;\n  adminTasks: AdminTask[] | null = null;\n  isLoading = false;\n  totalItems = 0;\n  itemsPerPage = ITEMS_PER_PAGE;\n  page!: number;\n  predicate!: string;\n  ascending!: boolean;\n\n  constructor(\n    private adminTaskService: AdminTaskService,\n    private accountService: AccountService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private modalService: NgbModal\n  ) {}\n\n  ngOnInit(): void {\n    this.accountService.identity().subscribe(account => (this.currentAccount = account));\n    this.handleNavigation();\n  }\n\n\n  loadAll(): void {\n    this.isLoading = true;\n    this.adminTaskService\n      .query( {\n        page: this.page -1,\n        size: this.itemsPerPage,\n        sort: this.sort(),\n      })\n      .subscribe({\n        next: (res: HttpResponse<AdminTask[]>) => {\n          this.isLoading = false;\n          this.onSuccess(res.body, res.headers)\n        },\n        error: () => (this.isLoading = false),\n      });\n  }\n\n  transition(): void {\n    this.router.navigate(['./'], {\n      relativeTo: this.activatedRoute.parent,\n      queryParams: {\n        page: this.page,\n        sort: `${this.predicate},${this.ascending ? ASC : DESC}`,\n      },\n    });\n  }\n\n\n\n\n  private handleNavigation(): void {\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe( ([data,params]) => {\n      const page = params.get('page');\n      this.page = +(page ?? 1);\n      const sort = (params.get(SORT) ?? data['defaultSort']).split(',');\n      this.predicate = sort[0];\n      this.ascending = sort[1] === ASC;\n      this.loadAll();\n    });\n\n  }\n\n  private sort(): string[] {\n    const result = [`${this.predicate},${this.ascending ? ASC : DESC}`];\n    if (this.predicate !== 'id') {\n      result.push('id');\n    }\n    return result;\n  }\n\n  private onSuccess(adminTasks: AdminTask[] | null, headers: HttpHeaders): void {\n    this.totalItems = Number(headers.get('X-Total-Count'));\n    this.adminTasks = adminTasks;\n  }\n}\n","<div>\n  <h2>\n    <span id=\"all-tasks-page-heading\" data-cy=\"allTasksPageHeading\">Alle Beispiele</span>\n\n    <div class=\"d-flex justify-content-end\">\n      <button class=\"btn btn-info mr-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\n        <span>Refresh List</span>\n      </button>\n    </div>\n  </h2>\n\n  <jhi-alert-error></jhi-alert-error>\n\n  <jhi-alert></jhi-alert>\n\n  <div class=\"table-responsive\" *ngIf=\"adminTasks\">\n    <table class=\"table table-striped\" aria-describedby=\"all-tasks-page-heading\">\n      <thead>\n      <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" (sortChange)=\"transition()\">\n        <th scope=\"col\" jhiSortBy=\"id\"><span>ID</span> <fa-icon icon=\"sort\"></fa-icon></th>\n        <th><span>Beispiel Name</span></th>\n        <th><span>Angabe Excel</span></th>\n        <th><span>Angabe PDF</span></th>\n        <th scope=\"col\"></th>\n      </tr>\n      </thead>\n      <tbody *ngIf=\"adminTasks\">\n      <tr *ngFor=\"let adminTask of adminTasks;\">\n        <td>{{ adminTask.id }}</td>\n        <td>{{ adminTask.name }}</td>\n        <!--        <td *ngIf=\"adminTask.pop() !== undefined\">-->\n        <!--            <jhi-file-download [fileId]=\"adminTask.instruction_excel\"> </jhi-file-download>-->\n        <!--        </td>-->\n        <td  *ngIf=\"adminTask.instruction_excel != undefined\">\n          <jhi-file-download [fileId]=\"adminTask.instruction_excel\"> </jhi-file-download>\n        </td>\n\n        <td *ngIf=\"adminTask.instruction_pdf != undefined\">\n          <jhi-file-download [fileId]=\"adminTask.instruction_pdf\"> </jhi-file-download>\n        </td>\n\n\n      </tr>\n      </tbody>\n    </table>\n  </div>\n\n  <div *ngIf=\"adminTasks\">\n    <div class=\"row justify-content-center\">\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\n    </div>\n\n    <div class=\"row justify-content-center\">\n      <ngb-pagination\n        [collectionSize]=\"totalItems\"\n        [(page)]=\"page\"\n        [pageSize]=\"itemsPerPage\"\n        [maxSize]=\"5\"\n        [rotate]=\"true\"\n        [boundaryLinks]=\"true\"\n        (pageChange)=\"transition()\"\n      ></ngb-pagination>\n    </div>\n  </div>\n</div>\n","import {NgModule} from \"@angular/core\";\nimport {SharedModule} from \"../../shared/shared.module\";\nimport {RouterModule} from \"@angular/router\";\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {allTasksRoute} from \"./all-tasks.route\";\nimport {AllTasksComponent} from \"./all-tasks.component\";\nimport {AdminTaskModule} from \"../../admin/admin-task/admin-task.module\";\n\n@NgModule({\n  imports: [SharedModule, RouterModule.forChild(allTasksRoute), NgbModule],\n  declarations: [\n    AllTasksComponent,\n  ],\n\n})\nexport class AllTasksModule {}\n","import {ActivatedRouteSnapshot, Resolve, Routes} from \"@angular/router\";\nimport {AdminTaskComponent} from \"../../admin/admin-task/list/admin-task.comonent\";\nimport {AdminTaskUpdateComponent} from \"../../admin/admin-task/update/admin-task-update.component\";\nimport {AdminTaskResolve} from \"../../admin/admin-task/admin-task.route\";\nimport {AllTasksComponent} from \"./all-tasks.component\";\nimport {Injectable} from \"@angular/core\";\nimport {AdminTask, IAdminTask} from \"../../admin/admin-task/admin-task.model\";\nimport {AdminTaskService} from \"../../admin/admin-task/service/admin-task.service\";\nimport {Observable, of} from \"rxjs\";\n\n\n\nexport const allTasksRoute: Routes = [\n  {\n    path:'',\n    component: AllTasksComponent,\n    data: {\n      defaultSort: 'id,asc',\n    },\n  },\n  ];\n"],"names":[],"sourceRoot":"webpack:///"}